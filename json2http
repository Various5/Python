import argparse
import json
import http.server
import socketserver
from pygments import highlight
from pygments.lexers import JsonLexer
from pygments.formatters import Terminal256Formatter


class JSONHandler(http.server.SimpleHTTPRequestHandler):
    def __init__(self, *args, json_file, **kwargs):
        self.json_file = json_file
        super().__init__(*args, **kwargs)

    def do_GET(self):
        if self.path == '/output':
            self.send_response(200)
            self.send_header('Content-type', 'application/json')
            self.end_headers()
            with open(self.json_file, 'r') as f:
                json_data = json.load(f)
                pretty_json = json.dumps(json_data, indent=4, sort_keys=True)
                colored_json = highlight(pretty_json, JsonLexer(), Terminal256Formatter(style='monokai'))
                self.wfile.write(colored_json.encode('utf-8'))
        else:
            super().do_GET()


def main():
    parser = argparse.ArgumentParser(description='Start a local webserver to serve a JSON file')
    parser.add_argument('--json', type=str, required=True, help='The path to the JSON file to serve')
    args = parser.parse_args()

    handler = lambda *args, **kwargs: JSONHandler(*args, json_file=args.json, **kwargs)

    with socketserver.TCPServer(('', 8000), handler) as httpd:
        print(f"Serving {args.json} at http://localhost:8000/output")
        httpd.serve_forever()


if __name__ == '__main__':
    main()
